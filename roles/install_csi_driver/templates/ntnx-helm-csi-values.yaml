# Default values for nutanix-csi-storage.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# parameters

# Legacy mode
#
# if legacy set to true we keep the old reverse domain notation for CSI driver name (com.nutanix.csi).
# need to be set to true only if upgrade and initialy installed with helm package before 2.2.x
legacy: {{ legacy }}

# OS settings
#
# Starting v2.3.1 CSI driver is OS independent, this value is reserved
os: {{ os }}

# kubeletDir allows overriding the host location of kubelet's internal state.
kubeletDir: "{{ kubeletDir }}"

# Global Settings for all pods

nodeSelector: {{ nodeSelector }}
tolerations: {{ tolerations }}
imagePullPolicy: {{ imagePullPolicy }}

# Storage Class settings
#
# choose for which mode (Volume, File, Dynamic File) storageclass need to be created
volumeClass: {{ volumeClass }}
volumeClassName: "{{ volumeClassName }}"

fileClass: {{ fileClass }}
fileClassName: "{{ fileClassName }}"

dynamicFileClass: {{ dynamicFileClass }}
dynamicFileClassName: "{{ dynamicFileClassName }}"


# Default Storage Class settings
#
# Decide wich storageclass will be the default
# value are: node, volume, file, dynfile
defaultStorageClass: {{ defaultStorageClass }}

# Nutanix Prism Elements settings
#
# Allow dynamic creation of Volumes and Fileshare
# needed if volumeClass or dynamicFileClass is set to true

prismEndPoint: "{{ prismEndPoint }}"
username: "{{ username }}"
password: "{{ password }}"
secretName: {{ secretName }}
createSecret: {{ createSecret }}

# Volumes Settings
#
{% if volumeClass %}
storageContainer: {{ storageContainer }}
fsType: {{ fsType }}
lvmVolume: {{ lvmVolume }}
lvmDisks: {{ lvmDisks }}
networkSegmentation: {{ networkSegmentation }}
{% endif %}

# Files Settings
#
{% if fileClass %}
fileHost: {{ fileHost }}
filePath: {{ filePath }}
{% endif %}

# Dynamic Files Settings
#
{% if dynamicFileClass %}
fileServerName: {{ fileServerName }}
{% endif %}


# Volume metrics and CSI operations metrics configuration
#

servicemonitor:
  enabled: {{ servicemonitor.enabled }}
  labels:
    # This should match the serviceMonitorSelector logic configured
    # on the prometheus.
    k8s-app: csi-driver


# Pod pecific Settings
#

provisioner:
  image: quay.io/karbon/ntnx-csi:v2.5.0
  nodeSelector: {}
  tolerations: []

node:
  image: quay.io/karbon/ntnx-csi:v2.5.0
  nodeSelector: {}
  tolerations: []

sidecars:
  registrar:
    image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.2.0
  provisioner:
    image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.2
  snapshotter:
    image: k8s.gcr.io/sig-storage/csi-snapshotter:v4.2.1
    imageBeta: k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3
  resizer:
    image: k8s.gcr.io/sig-storage/csi-resizer:v1.2.0
  livenessprobe:
    image: k8s.gcr.io/sig-storage/livenessprobe:v2.3.0
